host: &main_host localhost
port: &main_port 26257
db_type: postgres
db_connections: &connections
  - base_auth_setting:
      user: root
      host: *main_host
      port: *main_port
    db_name: test
    ssl_mode: disable
  - base_auth_setting:
      user: root
      host: *main_host
      port: 26258
    db_name: test
    ssl_mode: disable
  - base_auth_setting:
      user: root
      host: *main_host
      port: 26259
    db_name: test
    ssl_mode: disable
db_reset_configuration:
  db_type: postgres
  validate_query: "show tables;"
  db_connections: *connections
  base_connection:
    ssl_mode: disable
    base_auth_setting:
      user: root
      host: *main_host
  db_remove_command:
    cmd_command:
      command: docker
      args:
        - container
        - rm
        - "-f"
  db_start_command:
    cmd_command:
      command: docker
      args:
        - run
        - "-d"
        - "--network"
        - "roachnet"
        - cockroachdb/cockroach:v19.2.2
        - start
        - "--insecure"
        - "--join=roach1,roach2,roach3"
    port_config:
      flag_key: "-p"
      docker_port: "26257"
db_test_config:
  db_type: postgres
  create_db_command:
    command: docker
    args:
      - exec
      - roach1
      - bash
      - "-c"
      - /cockroach/cockroach sql --insecure --execute="create database log_test;"
  load_data_command:
    command: docker
    args:
      - exec
      - roach1
      - bash
      - "-c"
      - /cockroach/cockroach sql --insecure -d log_test < /cockroach/log_test_data.sql
  remove_data_command:
    command: docker
    args:
      - exec
      - roach1
      - bash
      - "-c"
      - /cockroach/cockroach sql --insecure --execute="drop database log_test cascade;"