// Code generated by MockGen. DO NOT EDIT.
// Source: form_util.go

// Package webutilmock is a generated GoMock package.
package webutilmock

import (
	gomock "github.com/golang/mock/gomock"
	http "net/http"
	reflect "reflect"
)

// MockRequestValidator is a mock of RequestValidator interface
type MockRequestValidator struct {
	ctrl     *gomock.Controller
	recorder *MockRequestValidatorMockRecorder
}

// MockRequestValidatorMockRecorder is the mock recorder for MockRequestValidator
type MockRequestValidatorMockRecorder struct {
	mock *MockRequestValidator
}

// NewMockRequestValidator creates a new mock instance
func NewMockRequestValidator(ctrl *gomock.Controller) *MockRequestValidator {
	mock := &MockRequestValidator{ctrl: ctrl}
	mock.recorder = &MockRequestValidatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRequestValidator) EXPECT() *MockRequestValidatorMockRecorder {
	return m.recorder
}

// Validate mocks base method
func (m *MockRequestValidator) Validate(req *http.Request, instance interface{}) (interface{}, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Validate", req, instance)
	ret0, _ := ret[0].(interface{})
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Validate indicates an expected call of Validate
func (mr *MockRequestValidatorMockRecorder) Validate(req, instance interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Validate", reflect.TypeOf((*MockRequestValidator)(nil).Validate), req, instance)
}
