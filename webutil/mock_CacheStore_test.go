// Code generated by mockery v2.10.0. DO NOT EDIT.

package webutil

import (
	time "time"

	mock "github.com/stretchr/testify/mock"
)

// MockCacheStore is an autogenerated mock type for the CacheStore type
type MockCacheStore struct {
	mock.Mock
}

// Del provides a mock function with given fields: keys
func (_m *MockCacheStore) Del(keys ...string) {
	_va := make([]interface{}, len(keys))
	for _i := range keys {
		_va[_i] = keys[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _va...)
	_m.Called(_ca...)
}

// Get provides a mock function with given fields: key
func (_m *MockCacheStore) Get(key string) ([]byte, error) {
	ret := _m.Called(key)

	var r0 []byte
	if rf, ok := ret.Get(0).(func(string) []byte); ok {
		r0 = rf(key)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]byte)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(key)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Set provides a mock function with given fields: key, value, expiration
func (_m *MockCacheStore) Set(key string, value interface{}, expiration time.Duration) {
	_m.Called(key, value, expiration)
}
